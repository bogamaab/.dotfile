syntax enable

" Stop acting like classic vi
set nocompatible		" disable vi compability mode
set noswapfile			" don't create swapfiles
set nobackup			" don't backup, use git!

" Enable filetype
filetype plugin indent on

" Persist undo history between file editing sessions.
set undofile
set undodir=~/.vim/undodir

" Modify indenting settings
set autoindent			" autoindent always ON

" Modify some other settingns about files
set encoding=utf8		" autoindent use unicode
set backspace=indent,eol,start	" backspace always works on insert mode
set hidden

set noshowmode
set laststatus=1 		" always show statusbar
set wildmenu			" enable visual wildmenu

set nowrap			" don't wrap long lines
set number			" show line numbers
set rnu				" show numbers as relative by default
set showmatch			" highlight matching parentheses and brackets

set noerrorbells
set ruler
set incsearch

set showcmd  		        " show vim commands in normal mode
set colorcolumn=80

command! W execute 'w !sudo tee % > /dev/null' <bar> edit!


call plug#begin('~/.vim/plugged')

Plug 'vim-airline/vim-airline'
Plug 'gruvbox-community/gruvbox'
"Plug 'arcticicestudio/nord-vim'
Plug 'michaeljsmith/vim-indent-object'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'ryanoasis/vim-devicons'
Plug 'tpope/vim-endwise'
Plug 'ap/vim-css-color'
" Syntax highlight and other functions for some languages
Plug 'vim-ruby/vim-ruby'
Plug 'lifepillar/pgsql.vim'

call plug#end()

" Colorscheme
"colorscheme nord
colorscheme gruvbox
set background=dark

" Vim airline
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1 " Enable tabline in the top of terminal
let g:airline#extensions#tabline#formatter = 'unique_tail'

"FZF
let g:fzf_layout = { 'right': '50%' }
let $FZF_DEFAULTS_OPTS='--reverse'

" Vim Ruby, some settings
let ruby_operators = 1
let ruby_pseudo_operators = 1
let g:rubycomplete_rails = 1

hi Normal guibg=NONE ctermbg=NONE
" Mark trailing spaces depending on whether we have a fancy terminal or not
if &t_Co > 2
	highlight ExtraWhitespace ctermbg=88 guibg=#fb4934
	match ExtraWhitespace /\s\+$/
else
	set listchars=trail:~
	set list
endif


let $RTP=split(&runtimepath, ',')[0]
let $RC="$HOME/.vim/vimrc"
let mapleader=" "


" Search and result center my screen
nmap n nzzzv
nmap N nzzzv

" Moving text
vmap J :m '>+1'<CR>gv=gv
vmap K :m '<-2'<CR>gv=gv
imap <C-j> <esc>:m .+1<CR>==
imap <C-k> <esc>:m .-2<CR>==
nmap <leader>k :m .-2<CR>==
nmap <leader>j :m .+1<CR>==

" Move to buffer with two keys
map <leader>n :bn<CR>
map <leader>p :bp<CR>

" Change to relative number <-> number
nmap <F5> :set invrelativenumber<CR>

" I'm no sure this is forever
noremap <leader>f :Files<CR>
noremap <leader>w :w<CR>
nnoremap Y y$

" Remove whitespace after save
autocmd BufWritePre * %s/\s\+$//e
